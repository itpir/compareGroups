\documentclass[11pt]{article}
\usepackage[ansinew]{inputenc}
%\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\usepackage[pdftex]{color,graphicx,epsfig}
\DeclareGraphicsRule{.pdftex}{pdf}{.pdftex}{}
\usepackage{amssymb,amsmath}
\usepackage{multirow}
\usepackage{hyperref}
\usepackage{lscape}
\usepackage{longtable}
\usepackage{color}
\usepackage{fancyvrb}
\usepackage{enumerate}
\usepackage{float}
\usepackage{setspace}





\newcommand{\Rlogo}{\protect\includegraphics[height=1.8ex,keepaspectratio]{./figures/Rlogo.pdf}}
\newenvironment{itemize*}%
  {\begin{itemize}%
    \setlength{\itemsep}{-0.35cm}%
    \setlength{\parskip}{10pt}}%
  {\end{itemize}}
\usepackage{Sweave}
\usepackage[pdftex]{graphicx}
\usepackage{tikz} 
\usetikzlibrary{shapes,arrows} 
\usepackage[a4paper,left=2cm,right=2cm,top=1.5cm,bottom=1.5cm]{geometry}

\definecolor{Soutput*}{rgb}{1,0,0}
\DefineVerbatimEnvironment{Verbatim*}{Verbatim}{formatcom={\color{Soutput*}},fontsize=\scriptsize \selectfont}


\definecolor{Scode*}{rgb}{0,0,1}
\DefineVerbatimEnvironment{Verbatim**}{Verbatim}{formatcom={\color{Scode*}},fontsize=\normalsize \selectfont}

\newenvironment{changemargin1}{
  \begin{list}{}{
    \setlength{\leftmargin}{+5cm}
    \setlength{\rightmargin}{3cm}
    \footnotesize
  }
  \item[]
  }{\end{list}}


\definecolor{Sinput}{rgb}{0,0,1}
\definecolor{Scode}{rgb}{0,0,1}
\definecolor{Soutput}{rgb}{1,0,0}
\DefineVerbatimEnvironment{Sinput}{Verbatim}{formatcom={\color{Sinput}},fontsize=\normalsize}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{formatcom={\color{Soutput}},fontsize=\scriptsize}
\DefineVerbatimEnvironment{Scode}{Verbatim}{formatcom={\color{Scode}},fontsize=\scriptsize}


\begin{document}
\SweaveOpts{concordance=TRUE}
\input{compareGroups_vignette-concordance}


\title{\Large \bf {\tt compareGroups} 2.0: Descriptives by groups \\ \vspace{0.5cm}}



\author{Isaac Subirana$^{3,1,4}$ , Joan Vila$^{1,3}$ and H\'ector Sanz$^{2,1}$}
%\VignetteIndexEntry{compareGroups}

\maketitle

\begin{scriptsize}
\noindent $^{1}$Cardiovascular Epidemiology \& Genetics group, Inflammatory and Cardiovascular Disease Programme, IMIM, Barcelona \\
$^{2}$Barcelona Centre for International Health Research (CRESIB, Hospital Clínic-Universitat de Barcelona), Barcelona, Spain \\
$^{3}$CIBER Epidemiology and Public Health (CIBERESP), Spain \\
$^{4}$Statistics Department, University of Barcelona, Spain \\
\end{scriptsize} 


\begin{center}
\texttt{isubirana@imim.es}, \texttt{jvila@imim.es}, \texttt{hsrodenas@gmail.com}
\end{center}

\vspace{0.5cm}

\tableofcontents

\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction} \label{section-Introduction}

The \textbf{{\tt compareGroups}} package allows users to create tables displaying results of univariate analyses, stratified or not by categorical variable groupings.\\


Tables can easily be exported to CSV, \LaTeX{} or HTML. \\

This package can be used from the \Rlogo~ prompt or from a user-friendly GUI.\\

This document provides an overview of the usage of the {\tt compareGroups} package.\\

To load the package using the \Rlogo~ prompt, enter:

<<echo=TRUE>>=
library(compareGroups)
@
Once the package is loaded, non-R users can follow the GUI instructions in Section \ref{gui}.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{Design: classes and methods} \label{Design}


The {\tt compareGroups} package has three functions:
\begin{itemize*}
\item {\tt compareGroups} creates an object of class {\tt compareGroups}. This object can be:
\begin{itemize*}
\item printed
\item summarized
\item plotted
\item updated
\end{itemize*}
\item {\tt createTable} creates an object of class {\tt createTable}. This object can be:
\begin{itemize*}
\item printed
\item summarized
\end{itemize*}
\item {\tt export2latex}, {\tt export2csv}, {\tt export2html} will export results to CSV, \LaTeX{} or HTML, respectively. 
\end{itemize*}

Figure \ref{fig:classes} shows the diagram of the package.

\begin{figure}[H]
\begin{center}
%\begin{changemargin1}
\includegraphics[width=0.8\textwidth]{./figures/classes.pdf}
\caption{Diagram of the {\tt compareGroups} package} \label{fig:classes}
%\end{changemargin1}
\end{center}
\end{figure}
\
\\
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{Data used as example} \label{data}

To illustrate how this package works we sampled 85\% data from the participants in the PREDIMED study (\texttt{www.predimed.org}) \cite{PREDIMED}. PREDIMED is a multicenter trial in Spain, were randomly assigned participants who were at high cardiovascular risk, but with no cardiovascular disease at enrolment, to one of three diets: a Mediterranean diet supplemented with extra-virgin olive oil (MedDiet+VOO), a Mediterranean diet supplemented with mixed nuts (MedDiet+Nuts), or a control diet (advice to reduce dietary fat). Participants received quarterly individual and group educational sessions and, depending on group assignment, free provision of extra-virgin olive oil, mixed nuts, or small non-food gifts. The primary end point was the rate of major cardiovascular events (myocardial infarction, stroke, or death from cardiovascular causes.
\\

\noindent First of all, load PREDIMED data typing:
<<>>=
data(predimed)
@


\vspace{0.3cm}
\noindent Variables and labels in this data frame are:

<<echo=FALSE,results=tex>>=
dicc<-data.frame(
"Name"=I(names(predimed)),
"Label"=I(unlist(lapply(predimed,label))),
"Codes"=I(unlist(lapply(predimed,function(x) paste(levels(x),collapse="; "))))
)
dicc$Codes<-sub(">=","$\\\\geq$",dicc$Codes)  
#print(xtable(dicc,align=rep("l",4)),include.rownames=FALSE,size="small",tabular.environment="longtable", sanitize.text.function=function(x) x)
print(xtable(dicc,align=rep("l",4)),include.rownames=FALSE,size="small", sanitize.text.function=function(x) x)
@
\
\\


\noindent OBSERVATIONS:

\begin{enumerate}[1.]

\item It is important to note that {\tt compareGroups} is not aimed to perform quality control of the data. Other useful packages such as {\tt r2lh} \cite{r2lh} are available for this purpose. 

\item It is strongly recommended that the \textit{data.frame} contain only the variables to be analyzed; the ones not needed in the present analysis should be removed from the list.

\item The nature of variables to be analyzed should be known, or at least which variables are to be used as categorical. It is important to code categorical variables as factors and the order of their levels is meaningful in this package.

\item The function {\tt label} from the {\tt Hmisc} package could be used to label the variables properly. The tables of results will contain the variable labels (by default).

\end{enumerate}  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Time-to-event variables} \label{timeto}

A variable of class {\tt Surv} must be created to deal with time-to-event variables (i.e., time to Cardiovascular event/censored in our example): 

<<echo=TRUE>>=
predimed$tmain <- with(predimed, Surv(toevent, event == 'Yes'))
label(predimed$tmain) <- "AMI, stroke, or CV Death"
@
\
\\

Note that variables \textit{tmain} and %% \textit{tcv} 
are created as time-to-death and time-to-cardiovascular event, respectively, both taking into account censoring (i.e. they are of class Surv).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Using {\tt R} syntax} \label{section-using R syntax}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%
\subsection{\texttt{compareGroups}} \label{compareGroups}

This is the main function. It does all the calculus. It is needed to store results in an object. Later, applying the function {\tt createTable} (Section \ref{createTable}) to this object will create tables of the analysis results.

For example, to perform a univariate analysis with the \textit{predimed} data between \textit{group} (``response'' variable) and all other variables (``explanatory'' variables), this formula is required:

<<echo=TRUE, results=hide>>=
compareGroups(group ~ . , data=predimed)
@

%%%%
\subsubsection{\texttt{Selecting response variables}} \label{selevar}


If only a dot occurs on the right side of the ``$\thicksim$'' all variables in the data frame will be used.\\


To remove the variable \textit{toevent} and \textit{event} from the analysis:
<<echo=TRUE, results=hide>>=
compareGroups(group ~ . -toevent - event, data=predimed)
@
\
\\

To select some explanatory variables (e.g., \textit{age}, \textit{sex}, and \textit{waist}) and store results in an object of class {\tt compareGroups}:

<<echo=TRUE>>=
res<-compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed)
res
@

\noindent Note: Although we have full data (n= \Sexpr{nrow(predimed)}) for Age, Sex and Waist circumference, there are some missing data in Hormone-replacement therapy (probably male participants). \\

Diet groups have some differences in Smoking and Hormone-replacement therapy  although those don't reach statistical significance (p-value=0.714 and 0.859, repectively); although Age, Sex and Waist circumference are clearly different.\\

Age \& Waist circumference has been used as continuous and normal distributed. Sex, Smoking \& Hormone-replacement therapy as categorical. \\

No filters have been used (e.g., selecting only treated patients); therefore, the \textit{selection} column lists ``ALL'' (for all variables). \\

\
\\

%%%%%%%%%%%%%%%%
\subsubsection{Subsetting} \label{subsetting}

To perform the analysis in a subset of participants (e.g., ``female'' participants):

<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
              subset = sex=='Female')
@

Note that only results for female participants are shown. \\

To subset specific variable/s (e.g., \textit{hormo} and \textit{waist}):

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@

<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed, 
              selec = list(hormo= sex=="Female", waist = waist>20 ))
@

Combinations are also allowed, e.g.:

<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@

<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
              selec = list(waist= !is.na(hormo)), subset = sex=="Female")
@


A variable can appear twice in the formula, e.g.:

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=TRUE)
@
<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + sex + bmi + bmi + waist + hormo, data=predimed, 
              selec = list(bmi.1=!is.na(hormo)))
@

In this case results for \textit{bmi} will be reported for all participants (n= 6324) and also for only those with no missing in Hormone-replacement therapy  (!is.na(hormo)). Note that ``bmi.1'' in the \textbf{selec} statement refers to the second time that \textit{bmi} appears in the formula.
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Methods for continuous variables} \label{method}


By default continuous variables are analyzed as normal-distributed. When a table is built (see {\tt createTable} function, Section \ref{createTable}), continuous variables will be described with mean and standard deviation. To change default options, e.g., ``waist'' used as non-normal distributed:

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
              method = c(waist=2))
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@

Note that ``continuous non-normal'' is shown in the \textit{method} column for the variable Hormone-replacement therapy.\\

Possible values in  methods statement are:
\begin{itemize*}
\item 1: forces analysis as normal-distributed 
\item 2: forces analysis as continuous non-normal
\item 3: forces analysis as categorical
\item NA: performs a Shapiro-Wilks test to decide between normal or non-normal
\end{itemize*}

If the \textbf{method} for a variable is stated as \textbf{= NA}, then a Shapiro-Wilk test for normality is used to decide if the variable is normal or non-normal distributed. To change the significance threshold:

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
              method = c(waist=NA), alpha= 0.01)
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@

According to Shapiro-Wilk test, stating the cutpoint at 0.01 level, Hormone-replacement therapy departed significantly from the normal distribution and therefore the method for this variable will be ``continuous non-normal''. \\
\
\\

All non factor variables are considered as continuous. Exception is made (by default) for those that have fewer than 5 different values. This threshold can be changed in the \textbf{min.dis} statement:

<<echo=TRUE, results=verbatim>>=
cuts<-"lo:55=1; 56:60=2; 61:65=3; 66:70=4; 71:75=5; 76:80=6; 81:hi=7"
predimed$age7gr<-car::recode(predimed$age, cuts)
compareGroups(group ~ age7gr, data=predimed, method = c(age7gr=NA))
compareGroups(group ~ age7gr, data=predimed, method = c(age7gr=NA), min.dis=8)
@

To avoid errors the maximum categories for the response variable is set at 5 in this example (default value). If this variable has more than 5 different values, the function {\tt compareGroups} returns an error message. For example:

\begin{Verbatim**}
> compareGroups(age7gr ~ sex + bmi + waist , data=predimed)
\end{Verbatim**}

\begin{Verbatim*}
Error en compareGroups.default(X = X, y = y, include.label = include.label,  :
number of groups must be less or equal to 5
\end{Verbatim*}

Defaults setting can be changed with the \textbf{max.ylev} statement:

<<echo=TRUE, results=verbatim>>=
compareGroups(age7gr ~ sex + bmi + waist, data=predimed, max.ylev=7)
@

Similarly, by default there is a limit for the maximum number of levels for an explanatory variable. If this level is exceeded, the variable is removed from the analysis and a warning message is printed:

<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ sex + age7gr, method= (age7gr=3), data=predimed, max.xlev=5)
@
\begin{Verbatim*}
Warning in compareGroups.default(X = X, y = y, include.label = include.label,  :
Variables 'age7gr' have been removed since some errors ocurred
\end{Verbatim*}
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Dressing up the output} \label{costum1}

Although the options described in this section correspond to {\tt compareGroups} function, results of changing/setting them won't be visible until the table is created with the {\tt createTable} function (explained later).\\
\
\\

\paragraph{include.label} By default the variable labels are shown in the output (if there is no label the name will be printed). Changing the statement include.label from ``= TRUE'' (default) to ``= FALSE'' will cause variable names to be printed instead.

<<echo=TRUE, results=verbatim>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
              include.label= FALSE)
@
\
\\

\paragraph{Q1, Q3} When the method for a variable is stated as ``2'' (i.e., to be analyzed as continuous non-normal; see section \ref{method}), by default the median and quartiles 1 and 3 will be shown in the final results, after applying the function \texttt{createTable} (see Section \ref{createTable}).

<<echo=FALSE, results=hide>>=
options(width=80, keep.source=FALSE)
@

<<echo=TRUE, results=verbatim>>=
resu1<-compareGroups(group ~ age + waist, data=predimed, 
                       method = c(waist=2))
createTable(resu1)
@

\noindent Note: percentiles 25 and 75 are calculated for \textit{Waist circumference}.\\

To get instead percentile 2.5 and 97.5:
  
<<echo=TRUE, results=verbatim>>=
resu2<-compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
                       method = c(waist=2), Q1=0.025, Q3=0.975)
createTable(resu2)
@

\noindent Note: percentiles 2.5 and 97.5 are calculated for Follow-up. \\

To get minimum and maximum:
  
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@
\
\\
<<echo=FALSE>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=hide>>=
compareGroups(group ~ age + smoke + waist + hormo, data=predimed, 
                method = c(waist=2), Q1=0, Q3=1)
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@
\
\\

\paragraph{simplify} Sometimes a categorical variable has no individuals for a specific group. For example, \textit{smoker} has 3 levels. As an example and to illustrate this problem, we have created a new variable \textit{smk} with a new category (``Unknown''):
  
<<echo=TRUE, results=verbatim>>=
predimed$smk<-predimed$smoke
levels(predimed$smk)<- c("Never smoker", "Current or former < 1y", "Never or former >= 1y", "Unknown")
label(predimed$smk)<-"Smoking 4 cat."
cbind(table(predimed$smk))
@

Note that this new category (``unknown'') has no individuals: 
 
\begin{Verbatim**}
> compareGroups(group ~ age + smk + waist + hormo, data=predimed)
\end{Verbatim**}

\begin{Verbatim*}
-------- Summary of results by groups of 'Intervention group'---------


  var                         N    p.value method            selection
1 Age                         6324 0.001** continuous normal ALL      
2 Smoking 4 cat.              6324 0.714   categorical       ALL      
3 Waist circumference         6324 0.019** continuous normal ALL      
4 Hormone-replacement therapy 5650 0.859   categorical       ALL      
-----
Signif. codes:  0 '**' 0.05 '*' 0.1 ' ' 1 

Warning message:
In compare.i(X[, i], y = y, selec.i = selec[i], method.i = method[i],  :
  Some levels of 'smk' are removed since no observation in that/those levels

\end{Verbatim*}

Note that an ``Warning'' message is printed related to the problem with \textit{smk}.\\
\
\\

To avoid using empty categories, {\tt simplify} must be stated as {\tt TRUE} (Default value).

<<echo=TRUE, results=hide>>=
compareGroups(group ~ age + smk, data=predimed, simplify=FALSE)
@

\begin{Verbatim*}
-------- Summary of results by groups of 'Intervention group'---------


  var            N    p.value method            selection
1 Age            6324 0.001** continuous normal ALL      
2 Smoking 4 cat. 6324 .       categorical       ALL      
-----
Signif. codes:  0 '**' 0.05 '*' 0.1 ' ' 1 

Warning messages:
1: In chisq.test(obj, simulate.p.value = TRUE) :
  cannot compute simulated p-value with zero marginals
2: In chisq.test(obj, simulate.p.value = TRUE) :
  Chi-squared approximation may be incorrect
\end{Verbatim*}
Nota that a warning message is shown and no p-values are calculated for Smoking.
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Summary} \label{summary}


Applying the \textbf{summary} function to an object of class \texttt{createTable} will obtain a more detailed output:
  
<<echo=TRUE>>=
res<-compareGroups(group ~ age + sex + smoke + waist + hormo, method = c(waist=2),
                   data=predimed)
summary(res[c(1, 2, 4)])
@

Note that because only variables 1, 3 \& 4 are selected, only results for Age, Sex \& Waist circumference are shown. Age is summarized by the mean and the standard deviation, Sex by frequencies and percentage, and Waist circumference (method =2) by the median and quartiles.
\
\\


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Plotting} \label{plotting}

Variables can be plotted to see their distribution. Plots differ according to whether the variable is continuous or categorical. Plots can be seen on-screen or saved as PDF.

<<echo=TRUE>>=
plot(res[c(1,2)], file="./figures/univar/")
@

\begin{flushleft}
\begin{figure}[!h]
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/univar/age.pdf}
\caption{Plot of Age}
\end{minipage}
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/univar/sex.pdf}
\caption{Plot of Sex}
\end{minipage}
\end{figure}
\end{flushleft}

Plots also can be done according to grouping variable. In this case only a boxplot is shown for continuous variables:
  
<<echo=TRUE>>=
plot(res[c(1,2)], bivar=TRUE, file="./figures/bivar/")
@

\begin{flushleft}
\begin{figure}[!h]
\begin{minipage}{9cm}
\includegraphics[width=0.9\textwidth]{./figures/bivar/age.pdf}
\caption{Plot of Age}
\end{minipage}
\begin{minipage}{9cm}
\includegraphics[width=0.9\textwidth]{./figures/bivar/sex.pdf}
\caption{Plot of Sex}
\end{minipage}
\end{figure}
\end{flushleft}
\
\\


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Updating} \label{updating}

The object from {\tt compareGroups} can later be updated. For example:
  
<<echo=TRUE, results=verbatim>>=
res<-compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed)
res
@

The object \textit{res} is updated using:
  
<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=hide>>=
res<-update(res, . ~. - sex +  bmi + toevent, subset = sex=='Female', 
              method = c(waist=2, tovent=2), selec = list(bmi=!is.na(hormo)))
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@
<<echo=TRUE, results=verbatim>>=
res
@

Note that ``Sex'' is removed as an explanatory variable but used as a filter, subsetting only ``Female'' participants. Variable ``Waist circumference'' has been changed to ``continuous non-normal''. Two new variables have been added: Body mass index and Follow-up (stated continuous non-normal). For Body mass index is stated to show only data of participants with non-missing values in Hormone-replacement therapy.
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Odds Ratios \& Hazard Ratios} \label{orhr}

When the response variable is binary, the Odds Ratio (OR) can be printed in the final table. If the response variable is time-to-event (see Section \ref{timeto}), the Hazard Ratio (HR) can be printed instead.
\
\\

\paragraph{ref} This statement can be used to change the reference category:
  
<<echo=TRUE, results=verbatim>>=
res1<-compareGroups(htn ~ age + sex + bmi + smoke, data=predimed, ref=1)
createTable(res1, show.ratio=TRUE)
@

Note that for categorical response variables the reference category is the first one in the statement:
  
<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=verbatim>>=
res2<-compareGroups(htn ~ age + sex + bmi + smoke, data=predimed, 
                    ref=c(smoke=1, sex=2))
createTable(res2, show.ratio=TRUE)
@

Note that the reference category for Smoking status is the first and for Sex the second.

<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@
\
\\

\paragraph{ref.no} Similarly to the ``ref'' statement, {\tt ref.no} is used to state ``no'' as the reference category for all variables with this category:
  
<<echo=TRUE, results=verbatim>>=
res<-compareGroups(htn ~ age + sex + bmi + hormo + hyperchol, data=predimed, 
                   ref.no='NO')
createTable(res, show.ratio=TRUE)
@

Note: 'no', 'No' or 'NO' will produce the same results; the coding is not case sensitive.
\
\\

\paragraph{fact.ratio} By default OR or HR for continuous variables are calculated for each unit increase. It can be changed by the {\tt fact.or} statement:
  
<<echo=TRUE, results=verbatim>>=
res<-compareGroups(htn ~ age + bmi, data=predimed)
createTable(res, show.ratio=TRUE)
@

Here the OR is for the increase of one unit for Age and Systolic blood pressure.

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=verbatim>>=
res<-compareGroups(htn ~ age + bmi, data=predimed, 
                   fact.ratio= c(age=10, bmi=2))
createTable(res, show.ratio=TRUE)
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@

Here the OR is for the increase of 10 years for Age and 2 units for Body mass index.
\
\\

\paragraph{ref.y} By default when OR or HR are calculated, the reference category for the response variable is the first. The reference category could be changed using the {\tt ref.y} statement:  
  
<<echo=TRUE, results=verbatim>>=
res<-compareGroups(htn ~ age + sex + bmi + hyperchol, data=predimed)
createTable(res, show.ratio=TRUE)
@

\noindent Note: This output shows the OR of having hypertension. Therefore, 'Non-hypertension' is the reference category.


<<echo=TRUE, results=verbatim>>=
res<-compareGroups(htn ~ age + sex + bmi + hyperchol, data=predimed, ref.y=2)
createTable(res, show.ratio=TRUE)
@

%%% 
\noindent Note: This output shows the OR of having No hypertension.
\
\\

Note: This output shows the OR of having No hypertension, and 'Hypertension' is now the reference category.\\
\
\\

When the response variable is of class \texttt{Surv}, the bivariate {\tt plot} function returns a Kaplan-Meier figure if the explanatory variable is categorical. For continuous variables the function returns a line for each individual, ending with a circle for censored and with a plus sign for uncensored.

<<echo=TRUE>>=
plot(compareGroups(tmain ~ sex, data=predimed), bivar=TRUE, file="./figures/bivar/")
plot(compareGroups(tmain ~ age, data=predimed), bivar=TRUE, file="./figures/bivar/")
@

\begin{flushleft}
\begin{figure}[!h]
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/bivar/age.pdf}
\caption{Categorical}
\end{minipage}
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/bivar/sex.pdf}
\caption{Continuous}
\end{minipage}
\end{figure}
\end{flushleft}

\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Time-to-event explanatory variables} \label{timevar}

When a variable of class \texttt{Surv} (see Section \ref{timeto}) is used as
explanatory it will be described with the probability of event, 
computed by Kaplan-Meier, up to a stated time.
\
\\

\paragraph{timemax} By default probability is calculated at the median of the follow-up period. {\tt timemax} option allows us to change at what time probability is calculated.

<<echo=FALSE, results=hide>>=
options(width=80,keep.source=FALSE)
@
<<echo=TRUE, results=hide>>=
res<-compareGroups(sex ~  age + tmain, timemax=c(tmain=3),
                   data=predimed)
res
@
<<echo=FALSE, results=hide>>=
options(width=120,keep.source=FALSE)
@

Note that \textit{tmain} is calculated at 3 years (see section \ref{timeto}).\\
\
\\

The {\tt plot} function applied to a variable of class \texttt{Surv} returns a Kaplan-Meier figure. The figure can be stratified by the grouping variable.

<<echo=TRUE>>=
plot(res[2], file="./figures/univar/")
plot(res[2], bivar=TRUE, file="./figures/bivar/")
@

\begin{flushleft}
\begin{figure}[!h]
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/univar/tmain.pdf}
\caption{Univariate}
\end{minipage}
\begin{minipage}{9cm}
\includegraphics[width=0.8\textwidth]{./figures/bivar/tmain.pdf}
\caption{Stratified by \textit{year}}
\end{minipage}
\end{figure}
\end{flushleft}
\
\\

%%%%%%%%%%%%%%%%%%%%%%%
\subsection{\texttt{createTable}} \label{createTable}

\texttt{createTable} function, applied to an object of \texttt{compareGroups} class, returns tables with descriptives that can be displayed on-screen or exported to CSV, \LaTeX{} or HTML.


<<echo=FALSE, results=hide>>=
options(width=100,keep.source=FALSE)
@

<<echo=TRUE>>=
res<-compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed, 
              selec = list(hormo=sex=="Female"))
restab<-createTable(res)
@

Two tables are created with the \texttt{createTable} function: one with the descriptives and the other with the available data. The {\tt print} command print applied to an object of class {\tt createTable} returns one or both tables:
  
<<echo=TRUE>>=
print(restab,which.table='descr')
@

Note that the option ``descr'' returns descriptives.

<<echo=TRUE>>=
print(restab,which.table='avail')
@

Note that the option ``avail'' returns the available data, as well as methods and selections.
\
\\

By default only the descriptives table is shown. Stating ``both'' in {\tt which.table} options returns both tables.
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Dressing up tables} \label{costum2}

\paragraph{hide} If the explanatory variable is dichotomous, one of the categories often is hidden in the results displayed (i.e., if \Sexpr{round(prop.table(table(predimed$sex))[1], 3)*100}\% are male, obviously \Sexpr{round(prop.table(table(predimed$sex))[2], 3)*100}\% are female). To hide some category, e.g., Male:
<<echo=TRUE>>=
update(restab, hide = c(sex="Male"))
@

Note that the percentage of males is hidden.
\
\\

\paragraph{hide.no} Similarly, as explained above, if the category ``no'' is to be hidden for all variables:
  
<<echo=TRUE>>=
res<-compareGroups(group ~ age + sex + htn + diab, data=predimed)
createTable(res, hide.no='no', hide = c(sex="Male"))
@

Note: 'no', 'No' or 'NO' will produce the same results; the coding is not case sensitive.
\
\\

\paragraph{digits} The number of digits that appear in the results can be changed, e.g:
  
<<echo=TRUE>>=
createTable(res, digits= c(age=2, sex = 3))
@

Note that mean and standard deviation has two decimal places for age, while percentage in sex has been set to three decimal places.
\
\\

\paragraph{type} By default categorical variables are summarized by frequencies and percentages. This can be changed by the {\tt type} command:
  
<<echo=TRUE>>=
createTable(res, type=1)
@

Note that only percentages are displayed.

<<echo=TRUE>>=
createTable(res, type=3)
@

Note that only frequencies are displayed.\\
\\ 

Values 2 or ``NA'' return the same results, i.e., the default option.
\
\\

\paragraph{show.n} If option \texttt{show.n} is set to ``TRUE'' a column with available data for each variable appears in the results:
  
<<echo=TRUE>>=
createTable(res, show.n=TRUE)
@
\
\\

\paragraph{show.descr} If option \texttt{show.descr} is set to ``FALSE'' only p-values are displayed:
  
<<echo=TRUE>>=
createTable(res, show.descr=FALSE)
@
\
\\

\paragraph{show.all} If \texttt{show.all} option is set to ``TRUE'' a column is displayed with descriptives for all data:
  
<<echo=TRUE>>=
createTable(res, show.all=TRUE)
@
\
\\

\paragraph{show.p.overall} If option \texttt{show.p.overall} is set to ``FALSE'' p-values are omitted from the table:
<<echo=TRUE>>=
createTable(res, show.p.overall=FALSE)
@
\
\\

\paragraph{show.p.trend} If the response variable has more than two categories a p-value for trend can be calculated. Results are displayed if the \texttt{show.p.trend} option is set to ``TRUE'':
  
<<echo=TRUE>>=
createTable(res, show.p.trend=TRUE)
@

\noindent Note: The p-value for trend is computed from the Pearson test when row-variable is normal and from the Spearman test when it is continuous non-normal. If row-variable is of class {\tt Surv}, the test score is computed from a Cox model where the grouping variable is introduced as an integer variable predictor. If the row-variable is categorical, the p-value for trend is computed as $
  1-pchisq(cor(as.integer(x),as.integer(y))^2*(length(x)-1),1)$
  \
\\

\paragraph{show.p.mul} For a response variable with more than two categories a pairwise comparison of p-values, corrected for multiple comparisons, can be calculated. Results are displayed if the \texttt{show.p.mul} option is set to ``TRUE'':
\begin{landscape}  
<<echo=TRUE>>=
createTable(res, show.p.mul=TRUE)
@
\noindent Note: Tukey method is used when explanatory variable is normal-distributed and Benjamini \& Hochberg \cite{BH} method otherwise.
\end{landscape}
\paragraph{show.ratio} If response variable is dichotomous or has been defined as class {\tt survival} (see Section \ref{timeto}), Odds Ratios and Hazard Ratios can be displayed in the results by stating ``TRUE'' at the show.ratio option:
  
<<echo=TRUE>>=
createTable(update(res, subset= group!="Control diet"), show.ratio=TRUE)
@

Note that category ``Control diet'' of the response variable has been omitted in order to have only two categories (i.e., a dichotomous variable). No Odds Ratios would be calculated if response variable has more than two categories.

<<echo=TRUE>>=
createTable(compareGroups(tmain ~  group + age + sex, data=predimed), 
            show.ratio=TRUE)
@

Note that when response variable is of class {\tt Surv}, Hazard Ratios are calculated instead of Odds Ratios.
\
\\

\paragraph{digits.ratio} The number of decimal places for Odds/Hazard ratios can be changed by the \texttt{digits.ratio} option:
  
<<echo=TRUE>>=
createTable(compareGroups(tmain ~  group + age + sex, data=predimed), 
            show.ratio=TRUE, digits.ratio= 3)
@
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Combining tables by row} \label{combirow}  

Tables made with the same response variable can be combined by row:
  
<<echo=TRUE>>=
restab1 <- createTable(compareGroups(group ~ age + sex, data=predimed))
restab2 <- createTable(compareGroups(group ~ bmi + smoke, data=predimed))
rbind("Non-modifiable risk factors"=restab1, "Modifiable risk factors"=restab2)
@

Note how variables are grouped under ``Non-modifiable'' and ``Modifiable'' risk factors because of an epigraph defined in the {\tt rbind} command in the example.\\
\
\\

The resulting object is of class {\tt rbind.createTable}, which can be subset but not updated. It inherits the class 'createTable'. Therefore, columns and other arguments from the {\tt createTable} function cannot be modified:\\
\
\\

To select only Age and Smoking:
  
<<echo=TRUE>>=
rbind("Non-modifiable"=restab1,"Modifiable"=restab2)[c(1,4)]
@

To change the order:
  
<<echo=TRUE>>=
rbind("Modifiable"=restab1,"Non-modifiable"=restab2)[c(4,3,2,1)]
@
\
\\

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Combining tables by column} \label{combicol}  

Columns from tables built with the same explanatory and response variables but done with a different subset (i.e. ALL, Male and Female) can be combined:
\begin{landscape}
<<echo=TRUE>>=
res<-compareGroups(group ~ age +  smoke + bmi + htn , data=predimed)
alltab <- createTable(res,  show.p.overall = FALSE)
femaletab <- createTable(update(res,subset=sex=='Female'), show.p.overall = FALSE)
maletab <- createTable(update(res,subset=sex=='Male'), show.p.overall = FALSE)
cbind("ALL"=alltab,"FEMALE"=femaletab,"MALE"=maletab)
@

With the argument \textit{caption} set to {\tt NULL} no name is displayed for columns. \\

<<echo=TRUE>>=
cbind(alltab,femaletab,maletab,caption=NULL)
@

By default the name of the table is displayed for each set of columns.

<<echo=TRUE>>=
cbind(alltab,femaletab,maletab)
@
\end{landscape}
\
\\  

\noindent NOTE: The resulting object is of class {\tt cbind.createTable} and inherits also the class {\tt createTable}. This cannot be updated. It can be nicely printed on the R console and also exported to \LaTeX{} but it cannot be exported to CSV or HTML.
\
\\
\subsubsection{{\tt createTable} miscellaneous} \label{miscellaneous}

\paragraph{print} By default only the table with the descriptives is printed. With the \texttt{which.table} command it can be changed: \texttt{`avail'} returns data available and \texttt{'both'} returns both tables:

<<echo=TRUE>>=
print(createTable(compareGroups(group ~ age + sex + smoke + waist + hormo,
                                data=predimed)), which.table='both')
@
With the \texttt{print} command setting \texttt{nmax} option = FALSE, the total maximum ``n'' in the available data is omitted in the first row.
<<echo=TRUE>>=
print(createTable(compareGroups(group ~ age + sex + smoke + waist + hormo,
                                data=predimed)),  nmax=FALSE)
@

\paragraph{summary} returns the same table as that generated with \texttt{print} 
command setting {\tt which.table='avail'}:

<<echo=TRUE>>=
summary(createTable(compareGroups(group ~ age + sex + smoke + waist + hormo, 
                                  data=predimed)))
@

\paragraph{update} An object of class {\tt createTable} can be updated:

<<echo=TRUE>>=
res<-compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed)
restab<-createTable(res, type=1, show.ratio=TRUE )
restab
update(restab, show.n=TRUE)
@

In just one statement it is possible to update an object of class 
\texttt{compareGroups} and \texttt{createTable}:

<<echo=TRUE>>=
update(restab, x = update(res, subset=c(sex=='Female')), show.n=TRUE)
@

Note that the \texttt{compareGroups} object (\textit{res}) is updated, 
selecting only 'Female' participants, 
and the \texttt{createTable} object (\textit{restab}) is updated to add a 
column with the maximum available data for each explanatory variable.\\

\paragraph{subsetting} Objects from \texttt{createTable} function can also be 
subsetted using ``['':

<<echo=TRUE>>=
createTable(compareGroups(group ~ age + sex + smoke + waist + hormo, data=predimed))
@
<<echo=TRUE>>=
createTable(compareGroups(group ~ age + sex + bmi, data=predimed))[1:2, ]
@
\
\\
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Exporting tables} \label{exporting} 

Tables can be exported to CSV, HTML or \LaTeX{}:

\begin{itemize*}
\item export2csv(restab, file="table1"), exports to CSV format
\item export2html(restab, file="table1"), exports to HTML format
\item export2latex(restab, file="table1"), exports to \LaTeX{} format
\end{itemize*}

File extensions are added automatically. Only the filename is needed (and the path if necessary) without the extension. \\
\
\\

%%%%%%%%%
\subsubsection{General exporting options} \label{exportoption}

\paragraph{which.table} By default only the table with the descriptives is 
exported. This can be changed with the \texttt{which.table} command: 
\texttt{`avail'} exports only available data and \texttt{'both'} both tables.
\
\\

\paragraph{nmax} By default a first row with the maximum ``n'' for available data (i.e. the number of participants minus the least missing data) is exported. Stating \texttt{nmax} = FALSE this first row is omitted.
\
\\

\paragraph{sep} Only relevant when table is exported to csv. Stating, for example, \texttt{sep} = ``;'' table will be exported to csv with columns separated by ``;''
\
\\

%%%%%%%%%%
\subsubsection{Exporting to \LaTeX{}} \label{exportolatex}

A special case of exporting is when tables are exported to \LaTeX{}. The function \texttt{export2latex} returns an object with the tex code as a character that can be changed in the \Rlogo~ session.
\
\\

\paragraph{file} If the {\tt file} argument in \texttt{export2latex} is missing, the code is printed in the \Rlogo~ console. This can be useful when \Rlogo~ code is inserted in a \LaTeX{} document chunk to be processed with {\tt Sweave}.

<<echo=TRUE>>=
restab<-createTable(compareGroups(group ~ age + sex + smoke + waist + hormo, 
                                  data=predimed))
export2latex(restab)
@
\
\\

\paragraph{size} The font size of exported tables can be changed by this option. Possible values are 'tiny', 'scriptsize', 'footnotesize', 'small', 'normalsize', 'large', 'Large', 'LARGE','huge', 'Huge' or 'same'. Default is 'same', which means that font size of the table is the same as specified in the main \LaTeX{} document where the table will be inserted.   \\
\
\\

\paragraph{caption} The table caption for descriptives table and available data table. If which.table='both' the first element of 'caption' will be assigned to descriptives table and the second to available data table. If it is set to `', no caption is inserted. Default value is NULL, which writes 'Summary descriptives table by groups of 'y'' for descriptives table and 'Available data by groups of 'y'' for the available data table.\\
\
\\
 
\paragraph{loc.caption} Table caption location. Possible values are 'top' or 'bottom'. Default value is 'top'.  \\
\
\\

\paragraph{label} Used to cite tables in a \LaTeX{} document. If {\tt which.table}='both' the first element of 'label' will be assigned to the descriptives table and the second to the available data table. Default value is {\tt NULL}, which assigns no label to the table/s.    \\
\
\\

\paragraph{landscape} Table is placed in horizontal way. This option is specially usefull when table contains many columns and/or they are too wide to be placed vertically. \\
\
\\



%%%%
\subsubsection{Generating an exhaustive report} \label{report}

In the version 2.0 of {\tt compareGroups} package, a new function called `report' has been created. This function automatically generates a PDF document with the descriptive table as well as the corresponding `available' table. In addition, plots of all analysed variables are shown.
\\

In order to make easier to `navigate' throught the document, an index with hyperlinks is inserted in the document.\\

See the help file of this function where you can find an example with the REGICOR data (the other example data set contained in the {\tt compareGroups} package)

<<eval=FALSE>>=
?report   # to know more about report function
?regicor  # info about REGICOR data set
@



%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{Missing values} \label{missing}

Many times, it is important to be aware of the missingness contained in each variable, possibly by groups.
Althought `available' table shows the number of the non-missing values for each row-variable and in each group, it would be desirable to test whether the frequency of non-available data is different between groups.
For this porpose, a new function has been implemented in the {\tt compareGroups} package, which is called `missingTable'. This function applies to both {\tt compareGroups} and {\tt createTable} class objects. This last option is useful when the table is already created. To illustrate it, we will use the REGICOR data set, comparing missing rates of all variables by year:

<<>>=
# from a compareGroups object
data(regicor)
res <- compareGroups(year ~ .-id, regicor)
missingTable(res)
@

<<eval=FALSE,results=hide>>=
# or from createTable objects
restab <- createTable(res, hide.no = 'no')
missingTable(restab)
@


Perhaps a NA value of a categorical variable may mean something different from just non available. For example, patients admitted for Coronary Acute Syndrome with NA in ST elevation may have a higher risk of in-hospital death than the ones with available data, i.e. ST elevation yes or not. If these kind of variables are introduced in the data set as NA, they are removed from the analysis. To avoid the user having to recode NA as a new category for all categorical variables, new argument called `include.miss' in {\tt compareGroups} has been implemented which does it automatically. Let's see an example with all variables from REGICOR data set by cardiovascular event.

<<>>=
# first create time-to-cardiovascular event
regicor$tcv<-with(regicor,Surv(tocv,cv=='Yes'))
# create the table
res <- compareGroups(tcv ~ . -id-tocv-cv-todeath-death, regicor, include.miss = TRUE)
restab <- createTable(res, hide.no = 'no')
restab
@


%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{Analysis of genetic data} \label{genetic}


In the version 2.0 of {\tt compareGroups}, it is possible to analyse genetic data, more concretely Single Nucleotic Polymorphisms (SNPs), using the function {\tt compareSNPs}. This function takes advantage of {\tt SNPassoc}\cite{SNPassoc} and {\tt HardyWeinberg} \cite{HW} packages to perform quality control of genetic data displaying the Minor Allele Frequencies, Missingness, Hardy Weinberg Equilibrium, etc. of the whole data set or by groups. When groups are considered, it also performs a test to check whether missingness rates is the same among groups.\\


\noindent Following, we illustrate this by an example taking a data set from {\tt SNPassoc} package. 
\\

\noindent First of all, load the {\tt SNPs} data from {\tt SNPassoc}, and visualize the first rows. Notice how are the SNPs coded, i.e. by the alleles. The alleles separator can be any character. If so, this must be specified in the `sep' argument of {\tt compareSNPs} function (see {\tt ?compareSNPs} for more details).
<<>>=
data(SNPs)
head(SNPs)
@

In this data frame there are some genetic and non-genetic data. Genetic variables are those whose names begin with `snp'. If we want to summarize the first three SNPs by case control status:

<<>>=
res<-compareSNPs(casco ~ snp10001 + snp10002 + snp10003, data=SNPs)
res
@

Note that all variables specified in the right hand side of the formula must be SNPs, i.e. variables whose levels or codes can be interpreted as genotypes (see {\tt setupSNPs} function from {\tt SNPassoc} package for more information).
Separated summary tables by groups of cases and controls are displayed, and the last table corresponds to missingness test comparing non-available rates among groups.\\

If summarizing SNPs in the whole data set is desired, without separating by groups, leave the left side of formula in blank, as in {\tt compareGroups} function. In this case, a single table is displayed and no missingness test is performed.

<<>>=
res<-compareSNPs(~ snp10001 + snp10002 + snp10003, data=SNPs)
res
@




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{Using GUI} \label{gui}

Once the {\tt compareGroups} package is loaded, a Graphical User Interface (GUI) is displayed in response to typing {\tt cGroupsGUI()}. The GUI is meant to make it feasible for users who are unfamiliar with \Rlogo~ to construct bivariate tables.
\\

In this section we illustrate, step by step, how to construct a bivariate table containing descriptives by groups from the \textit{predimed} data  using the GUI:
  
%\begin{center}
%\small
%\input{./tables/gui_example.tex}
%\normalsize
%\end{center}
<<echo=FALSE, results=tex>>=
export2latex(createTable(compareGroups(group ~  age + sex + smoke + bmi + waist + 
wth + htn + diab + hyperchol + famhist + hormo + p14 + toevent + event,
                          data=predimed), hide.no="No",hide = c(sex="Male")))
@

\newpage

\begin{itemize}

\item[Step 1.] Browse for and select the data to be loaded. Valid file types include SPSS or \Rlogo~ format, CSV plain text file or a \textit{data.frame} already existing in the Workspace. By default, the \textit{predimed} example data is loaded when the GUI is opened.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step1_load_data.JPG}
\end{center}


\item[Step 2.] Choose the variables to be described (row-variables).
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step2_select_row_variables.png}
\end{center}

\newpage
\item[Step 3.] If descriptives by group are desired (for example), move the variable \textit{group} to the GUI top frame, making it the factor variable. To report descriptives for the whole sample (i.e., no groups), click on the 'none' button.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step3_select_group_variable.png}
\end{center}

\item[Step 4.] It is possible to hide the first, last or no categories of a categorical row-variable. In this example, 'Male' levels will be hidden for Sex; conversely, all categories will be shown for other categorical variables. 
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step4_hide_categ.png}
\end{center}

\newpage

\item[Step 5.] For each continuous variable, it is possible to specify whether to treat it as normal or non-normal or to transform a numerical variable into a categorical one. This last option can be interesting if a categorical variable has been coded as numerical. By default, all continuous variables are treated as normal. In this example, Waist circumference will be treated as non-normal, i.e., median and quartiles will be reported instead of mean and standard deviation.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step5_select_method.png}
\end{center}

\item[Step 6.] For each row-variable, it is possible to select a subset of individuals from the data set to be included. In this example, descriptives of Body mass index, Waist circumference and Waist-to-height ratio will be reported only for Female participants. Also, it is possible to specify criteria to select a subset of individuals to be included for all row-variables: type the logical condition (selection criteria of individuals) on the 'Global subset' window instead of 'Variable subset'.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step6_subsetting.png}
\end{center}


\newpage

\item[Step 7.] Some bivariate table characteristics can be set by clicking on 'Report options' from the main menu, such as to report descriptives (mean, frequencies, medians, etc.), display the p-trend, and show only relative frequencies.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step7_report_options.png}
\end{center}

\item[Step 8.] Finally, specify the bivariate table format (\LaTeX{}, CVS plain text or HTML). Clicking on 'print' will then display the bivariate table, as well as a summary (available data, etc.), on the \Rlogo~ console. The table can also be exported to the file formats listed.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/step8_export_table.png}
\end{center}

\end{itemize}

%%%%%%%%%%%%%%%%
  \newpage
\subsection{Computing Odds Ratio}

For a case-control study, it may be necessary to report the Odds Ratio between cases and controls for each variable. The table below contains Odds Ratios for each row-variable by hypertension status.

<<echo=FALSE, results=tex>>=
export2latex(createTable(compareGroups(htn ~  age + sex + smoke + bmi + waist + 
                              wth + diab + hyperchol + famhist + hormo + 
                            p14 + toevent + event,
                            data=predimed), hide.no="No",hide = c(sex="Male"),
            show.ratio=TRUE, show.descr=FALSE))
@
To build this table, as illustrated in the screens below, you would select \textit{htn} variable (Hypertension status) as the factor variable, indicate 'no' category on the 'reference' pull-down menu, and mark 'Show odds/hazard ratio' in the 'Report Options' menu before exporting the table.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/or_rr.png}
\end{center}
%%%%%%%%%%%%%%%%%%%%%%
\newpage
\subsection{Computing Hazard Ratio}

In a cohort study, it may be more informative to compute hazard ratio taking into account time-to-event.


<<echo=FALSE, results=tex>>=
export2latex(createTable(compareGroups(tmain ~  group + age + sex, data=predimed), 
            show.ratio=TRUE))
@
To generate this table, select \textit{toevent} variable and \textit{event}, indicating the time-to-event and the status, respectively, and select the event category for the status variable. Finally, as for Odds Ratios, mark 'Show odds/hazard ratio' in the 'Report Options' menu before exporting the table.
\begin{center}
\includegraphics[width=1\textwidth]{./figures/GUI/toevent.png}
\end{center}


\vspace{1cm}
To return to the \Rlogo~ console, just close the GUI window.

\newpage
\section*{Bibliography}
%\bibliographystyle{bmc_article}  % Style BST file
\bibliographystyle{plain}  % Style BST file
\bibliography{compareGroups_vignette}

\end{document}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
